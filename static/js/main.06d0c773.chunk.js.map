{"version":3,"sources":["components/FormAddExpense.js","components/components/BtnDelete.js","components/components/Item.js","components/Costs.js","components/Income.js","components/Score.js","App.js","reportWebVitals.js","index.js"],"names":["FormAddExpense","props","state","id","name","income","cost","category","amount","type","categories","handleSubmit","e","preventDefault","newCosts","costs","push","changeCosts","newIncome","incomes","changeIncomes","handleReset","alert","setState","isCostsInput","current","checked","isIncomesInput","clearSelectInput","value","handleChange","target","data_categories","React","createRef","this","className","action","onSubmit","onClick","ref","htmlFor","onChange","step","min","disabled","selected","map","item","key","Component","BtnDelete","deleteItem","itemId","style","lineHeight","Item","Fragment","Costs","totalCost","Income","totalIncome","Score","balance","color","App","newArray","filter","additionCosts","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+hBAuHeA,G,wDAjHf,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMNC,MAAQ,CACVC,GAAG,IACHC,KAAK,GACLC,QAAO,EACDC,MAAK,EACXC,SAAS,GACHC,OAAO,GACPC,KAAK,IAdK,EAgBdC,WAAa,GAhBC,EAkBdC,aAAe,SAACC,GACZA,EAAEC,iBADgB,MAI6B,EAAKX,MAA7CE,EAJW,EAIXA,KAAMG,EAJK,EAILA,SAAUC,EAJL,EAIKA,OAAQH,EAJb,EAIaA,OAAQC,EAJrB,EAIqBA,KACvC,GAAGF,GAAQG,GAAYC,IAAWH,GAAUC,GAAM,CAC9C,IAAqB,IAAlB,EAAKJ,MAAMI,KAAY,CACtB,IAAIQ,EAAQ,YAAO,EAAKb,MAAMc,OAC9BD,EAASE,KAAK,EAAKd,OACnB,EAAKD,MAAMgB,YAAYH,GAE3B,IAAuB,IAApB,EAAKZ,MAAMG,OAAc,CACxB,IAAIa,EAAS,YAAO,EAAKjB,MAAMkB,SAC/BD,EAAUF,KAAK,EAAKd,OACpB,EAAKD,MAAMmB,cAAcF,GAE7B,EAAKG,mBAELC,MAAM,6CApCA,EAwCjBD,YAAc,WACb,EAAKE,SAAS,CACbpB,GAAG,EAAKD,MAAMC,GAAG,EACjBC,KAAK,GACLC,QAAO,EACPC,MAAK,EACLC,SAAS,GACTC,OAAO,KAEF,EAAKgB,aAAaC,QAAQC,SAAQ,EAClC,EAAKC,eAAeF,QAAQC,SAAQ,EACpC,EAAKE,iBAAiBH,QAAQI,MAAM,IAnD1B,EAsDdC,aAAe,SAAClB,GACZ,EAAKW,SAAL,eAAiBX,EAAEmB,OAAO5B,GAAKS,EAAEmB,OAAOF,QACpB,UAAhBjB,EAAEmB,OAAOtB,OACS,UAAdG,EAAEmB,OAAO5B,IACrB,EAAKoB,SAAS,CAACjB,MAAK,EAAKD,QAAO,EAAMI,KAAKG,EAAEmB,OAAO5B,KAEnC,YAAdS,EAAEmB,OAAO5B,IACZ,EAAKoB,SAAS,CAACjB,MAAK,EAAMD,QAAO,EAAKI,KAAKG,EAAEmB,OAAO5B,KAE5C,EAAKO,WAAasB,EAAgBpB,EAAEmB,OAAO5B,MA5DnD,EAAKqB,aAAeS,IAAMC,YAC1B,EAAKP,eAAiBM,IAAMC,YAC5B,EAAKN,iBAAmBK,IAAMC,YALhB,E,qDAoEJ,IAAD,EAC0CC,KAAKjC,MAA7CE,EADF,EACEA,KAAMI,EADR,EACQA,OADR,EACgBD,SADhB,EAC0BD,KAD1B,EACgCD,OACrC,OACA,sBAAK+B,UAAU,mBAAf,UACI,oDACA,sBAAMC,OAAO,GAAGC,SAAUH,KAAKxB,aAA/B,SACI,sBAAKyB,UAAU,aAAf,UACI,gCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOG,QAASJ,KAAKL,aAAcM,UAAU,mBAAmB3B,KAAK,QAAQL,KAAK,SAASD,GAAG,QAAQqC,IAAKL,KAAKX,eAChH,uBAAOiB,QAAQ,OAAf,wBAEJ,sBAAKL,UAAU,aAAf,UACI,uBAAOG,QAASJ,KAAKL,aAAcM,UAAU,mBAAmB3B,KAAK,QAAQL,KAAK,SAASD,GAAG,UAAUqC,IAAKL,KAAKR,iBAClH,uBAAOc,QAAQ,SAAf,+BAGR,sBAAKL,UAAU,8BAAf,UACI,uBAAOK,QAAQ,OAAf,oBACA,uBAAOC,SAAUP,KAAKL,aAAcrB,KAAK,OAAOL,KAAK,OAAOD,GAAG,OAAO0B,MAAOzB,OAEjF,sBAAKgC,UAAU,8BAAf,UACI,uBAAOK,QAAQ,SAAf,8BACA,uBAAOC,SAAUP,KAAKL,aAAcrB,KAAK,SAASkC,KAAK,OAAOC,IAAI,IAAIxC,KAAK,SAASD,GAAG,SAAS0B,MAAOrB,OAE3G,sBAAK4B,UAAU,8BAAf,UACI,uBAAOK,QAAQ,WAAf,wBACA,yBAAQC,SAAUP,KAAKL,aAAc1B,KAAK,WAAWD,GAAG,WAAWqC,IAAKL,KAAKP,iBAA7E,UACI,wBAAQC,MAAM,GAAGgB,UAAQ,EAACC,UAAQ,EAAlC,wBACCX,KAAKzB,WAAWqC,KAAI,SAACC,EAAMC,GAAP,OAAiB,yBAAQ9C,GAAG,WAAqB0B,MAAOmB,EAAvC,cAA+CA,EAA/C,MAA2BC,YAGzE,wBAAQb,UAAU,uBAAuB3B,KAAK,SAA9C,4D,GArGSyC,cCSdC,EAZG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,OAAQ5C,EAAU,EAAVA,KAEpC,OACI,wBACIA,KAAK,SACL2B,UAAU,iBACVG,QAAS,kBAAMa,EAAWC,EAAQ5C,IAClC6C,MANS,CAACC,WAAW,OAEzB,gBCuBOC,G,MAvBF,SAAC,GAAoD,IAAnDpD,EAAkD,EAAlDA,KAAMG,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,OAAQ4C,EAA0B,EAA1BA,WAAYjD,EAAc,EAAdA,GAAIM,EAAU,EAAVA,KACnD,OACI,cAAC,IAAMgD,SAAP,UACI,qBAAKrB,UAAU,YAAf,SACI,sBAAKA,UAAU,WAAf,iCACI,qBAAKA,UAAU,+BAAf,SACG,uCAAUhC,OAEb,qBAAKgC,UAAU,mCAAf,SACI,4BAAI7B,MAER,qBAAK6B,UAAU,iCAAf,SACI,4BAAI5B,MAER,qBAAK4B,UAAU,gCAAf,SACI,cAAC,EAAD,CAAWgB,WAAYA,EAAYC,OAAQlD,EAAIM,KAAMA,eCK9DiD,EArBD,SAAC,GAAoC,IAAnC3C,EAAkC,EAAlCA,MAAOqC,EAA2B,EAA3BA,WAAYO,EAAe,EAAfA,UAC/B,OACI,sBAAKvB,UAAU,QAAf,UACI,yCACCrB,EAAMgC,KAAI,SAAAzC,GAAI,OACX,cAAC,EAAD,CAEIH,GAAIG,EAAKH,GACTC,KAAME,EAAKF,KACXG,SAAUD,EAAKC,SACfC,OAAQF,EAAKE,OACb4C,WAAYA,EACZ3C,KAAMH,EAAKG,MAPf,eACiBH,EAAKH,QAU9B,kDAAiB,+BAAOwD,WCIjBC,EApBA,SAAC,GAAwC,IAAvCzC,EAAsC,EAAtCA,QAASiC,EAA6B,EAA7BA,WAAYS,EAAiB,EAAjBA,YAClC,OACI,sBAAKzB,UAAU,SAAf,UACI,yCACCjB,EAAQ4B,KAAI,SAAA1C,GAAM,OACf,cAAC,EAAD,CAEIF,GAAIE,EAAOF,GACXC,KAAMC,EAAOD,KACbG,SAAUF,EAAOE,SACjBC,OAAQH,EAAOG,OACf4C,WAAYA,EACZ3C,KAAMJ,EAAOI,MAPjB,iBACmBJ,EAAOF,QAS9B,qDAAoB,+BAAO0D,WCTxBC,EARD,SAAC,GAA8B,IAA7BH,EAA4B,EAA5BA,UACRI,EADoC,EAAjBF,YACIF,EAC3B,OACI,+DAA4B,uBAAML,MAAQ,CAAEU,MAAQD,EAAkB,QAAR,OAAlC,cAAwDA,EAAxD,OAA5B,QCmGOE,E,4MAhGb/D,MAAQ,CACJyD,WAAW,IACXE,YAAY,IACZ9C,MAAO,CACL,CAAEZ,GAAG,EACHC,KAAK,SACLC,QAAO,EACPC,MAAK,EACLC,SAAS,UACTC,OAAO,KACPC,KAAK,SAEP,CAAEN,GAAG,EACLC,KAAK,WACLC,QAAO,EACPC,MAAK,EACLC,SAAS,YACTC,OAAO,KACPC,KAAK,SAEP,CAAEN,GAAG,EACHC,KAAK,QACLC,QAAO,EACPC,MAAK,EACLC,SAAS,UACTC,OAAO,KACPC,KAAK,UAEPU,QAAS,CACP,CAAEhB,GAAG,EACHC,KAAK,OACLC,QAAO,EACPC,MAAK,EACLC,SAAS,cACTC,OAAO,MACPC,KAAK,WAEP,CAAEN,GAAG,EACLC,KAAK,SACLC,QAAO,EACPC,MAAK,EACLC,SAAS,OACTC,OAAO,OACPC,KAAK,a,EAGTQ,YAAc,SAACiD,GACb,EAAK3C,SAAS,CAACR,MAAMmD,K,EAEvBd,WAAa,SAACC,EAAQ5C,GACpB,GAAU,UAAPA,EAAe,CAChB,IAAIM,EAAQ,YAAI,EAAKb,MAAMa,OAAOoD,QAAO,SAAC7D,GAAU,OAAOA,EAAKH,KAAKkD,KACrE,EAAK9B,SAAS,CAACR,UAEjB,GAAU,YAAPN,EAAiB,CAClB,IAAIU,EAAU,YAAI,EAAKjB,MAAMiB,SAASgD,QAAO,SAAC9D,GAAY,OAAOA,EAAOF,KAAKkD,KAC7E,EAAK9B,SAAS,CAACJ,c,EAGnBC,cAAgB,SAAC8C,GACf,EAAK3C,SAAS,CAACJ,QAAQ+C,K,EAIzBE,cAAgB,WACdC,QAAQC,IAAI,6B,uDAGN,IAAD,EAC0CnC,KAAKjC,MAA/Ca,EADA,EACAA,MAAOI,EADP,EACOA,QAASwC,EADhB,EACgBA,UAAWE,EAD3B,EAC2BA,YAClC,OACE,sBAAKzB,UAAU,MAAf,UAEE,qBAAKA,UAAU,MAAf,SACM,qBAAKA,UAAU,iBAAf,SACI,cAAC,EAAD,CAAOuB,UAAWA,EAAWE,YAAaA,QAGpD,qBAAKzB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,cAAC,EAAD,CAAgBrB,MAAOA,EAAOI,QAASA,EAASF,YAAakB,KAAKlB,YAAaG,cAAee,KAAKf,kBAErG,qBAAKgB,UAAU,gCAAf,SACE,cAAC,EAAD,CAAOrB,MAAOA,EAAO4C,UAAWA,EAAWP,WAAYjB,KAAKiB,eAE9D,qBAAKhB,UAAU,gCAAf,SACE,cAAC,EAAD,CAAQjB,QAASA,EAAS0C,YAAaA,EAAaT,WAAYjB,KAAKiB,2B,GAxFjEF,aCKHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06d0c773.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\n\r\nimport data_categories from '../data/categories.json';\r\nimport './FormAddExpense.css';\r\n\r\nclass FormAddExpense extends Component {\r\nconstructor(props){\r\n    super(props)\r\n    //zmienic nazwe refów do czyszczenia\r\n    this.isCostsInput = React.createRef();\r\n    this.isIncomesInput = React.createRef();\r\n    this.clearSelectInput = React.createRef();\r\n}\r\n    state = {\r\n\t\tid:100,\r\n\t\tname:'',\r\n\t\tincome:false,\r\n        cost:false,\r\n\t\tcategory:'',\r\n        amount:'',\r\n        type:'',\r\n    }\r\n    categories = [];\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //VALIDATE\r\n        // THEN .PUSH\r\n        const {name, category, amount, income, cost} = this.state;\r\n        if(name && category && amount && (income || cost)){\r\n            if(this.state.cost===true){         // TODO - zastąpić dwa ify czymś zagrabniejszym, jakiś pomysł ?\r\n                let newCosts = [...this.props.costs];\r\n                newCosts.push(this.state);\r\n                this.props.changeCosts(newCosts);\r\n            }\r\n            if(this.state.income===true){\r\n                let newIncome = [...this.props.incomes];\r\n                newIncome.push(this.state);\r\n                this.props.changeIncomes(newIncome);\r\n            }\r\n            this.handleReset();\r\n        } else{\r\n            alert('uzupełnij wszystkie pola formularza')\r\n        }\r\n    }\r\n\r\n\thandleReset = ()=>{\r\n\t\tthis.setState({\r\n\t\t\tid:this.state.id+1,\r\n\t\t\tname:'',\r\n\t\t\tincome:false,\r\n\t\t\tcost:false,\r\n\t\t\tcategory:'',\r\n\t\t\tamount:'',\r\n        })\r\n        this.isCostsInput.current.checked=false;\r\n        this.isIncomesInput.current.checked=false;\r\n        this.clearSelectInput.current.value=\"\";\r\n\t}\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value})\r\n        if (e.target.type===\"radio\"){\r\n            if (e.target.id===\"costs\"){\r\n\t\t\t\tthis.setState({cost:true,income:false,type:e.target.id})\r\n\t\t\t}\r\n\t\t\tif (e.target.id===\"incomes\"){\r\n\t\t\t\tthis.setState({cost:false,income:true,type:e.target.id})\r\n\t\t\t}\r\n            this.categories = data_categories[e.target.id];  //ZOBACZYC - praca na jsonie bez parsowania, czy tak można ?\r\n        }\r\n            // this.setState({[e.target.id]:e.target.checked})  //wcześniejszy automat z błędem\r\n        }   //TODO zmiana stanu przy input RADIO jest napisana bardzo manualnie !!??\r\n\r\n    render() {\r\n        const {name, amount, category, cost, income} = this.state;\r\n        return (\r\n        <div className=\"form-add-expense\">\r\n            <h5>Dodaj pozycję</h5>\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <div>\r\n                        <div className=\"form-check\">\r\n                            <input onClick={this.handleChange} className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"costs\" ref={this.isCostsInput}/>\r\n                            <label htmlFor=\"cost\">WYDATEK</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input onClick={this.handleChange} className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"incomes\" ref={this.isIncomesInput}/>\r\n                            <label htmlFor=\"income\">PRZYCHÓD</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-control mt-2 text-left\">\r\n                        <label htmlFor=\"name\">Nazwa:</label>\r\n                        <input onChange={this.handleChange} type=\"text\" name=\"name\" id=\"name\" value={name}/>\r\n                    </div>\r\n                    <div className=\"form-control mt-2 text-left\">\r\n                        <label htmlFor=\"amount\">Kwota w zł:</label>\r\n                        <input onChange={this.handleChange} type=\"number\" step=\"0.01\" min=\"0\" name=\"amount\" id=\"amount\" value={amount}/>\r\n                        </div>\r\n                    <div className=\"form-control mt-2 text-left\">\r\n                        <label htmlFor=\"category\">Kategoria:</label>\r\n                        <select onChange={this.handleChange} name=\"category\" id=\"category\" ref={this.clearSelectInput}>\r\n                            <option value=\"\" disabled selected> kategoria</option>\r\n                            {this.categories.map((item, key) => ( <option id=\"category\" key={key} value={item}> {item} </option>))}\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"btn btn-primary mt-2\" type=\"submit\">Dodaj pozycję do budżetu</button>\r\n                </div>\r\n\t\t\t{/* <p>income: {income ? \"true\" : \"false\"}</p>\r\n            <p>cost: {cost ? \"true\" : \"false\"}</p>\r\n            <p>name: {name}</p>\r\n            <p>amount: {amount}</p>\r\n            <p>category: {category}</p> */}\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormAddExpense;\r\n","import React from 'react';\r\n\r\nconst BtnDelete = ({deleteItem, itemId, type}) => {\r\n    const myStyles = {lineHeight:\"0.8\"};\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => deleteItem(itemId, type)}\r\n            style={myStyles}\r\n    >X</button>\r\n    );\r\n}\r\n\r\nexport default BtnDelete;","import React from 'react';\r\n\r\nimport BtnDelete from './BtnDelete';\r\nimport './Item.css';\r\n\r\nconst Item = ({name, category, amount, deleteItem, id, type}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row item\">               {/* TODO .display-item nie jest używana może wyrzucić ?? */}  {/* TODO wypisywać listę jako ul>li ? */}\r\n                    <div className=\"display-item item-name col-3\">\r\n                       <strong> {name}</strong>\r\n                    </div>\r\n                    <div className=\"display-item item-category col-3\">\r\n                        <p>{category}</p>\r\n                    </div>\r\n                    <div className=\"display-item item-amount col-3\">\r\n                        <p>{amount}</p>\r\n                    </div>\r\n                    <div className=\"display-item btn-delete col-3\">\r\n                        <BtnDelete deleteItem={deleteItem} itemId={id} type={type}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\n\r\nimport Item from './components/Item';\r\n\r\nconst Costs = ({costs, deleteItem, totalCost}) => {\r\n    return (\r\n        <div className=\"costs\">\r\n            <h5>Wydatki</h5>\r\n            {costs.map(cost => (\r\n                <Item\r\n                    key={`cost-${cost.id}`}\r\n                    id={cost.id}\r\n                    name={cost.name}\r\n                    category={cost.category}\r\n                    amount={cost.amount}\r\n                    deleteItem={deleteItem}\r\n                    type={cost.type}\r\n                />))\r\n            }\r\n                {/* TODO przekazywanie do props całego obiektu z .map*/}\r\n        <p>Suma wydatków <span>{totalCost}</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Costs;","import React from 'react';\r\n\r\nimport Item from './components/Item';\r\n\r\nconst Income = ({incomes, deleteItem, totalIncome}) => {\r\n    return (\r\n        <div className=\"income\">\r\n            <h5>Dochody</h5>\r\n            {incomes.map(income => (\r\n                <Item\r\n                    key={`income-${income.id}`}\r\n                    id={income.id}\r\n                    name={income.name}\r\n                    category={income.category}\r\n                    amount={income.amount}\r\n                    deleteItem={deleteItem}\r\n                    type={income.type}\r\n                />))\r\n            }\r\n            <p>Suma przychodów: <span>{totalIncome}</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Income;","import React from 'react';\r\n\r\nconst Score = ({totalCost, totalIncome}) => {\r\n    let balance= totalIncome - totalCost ;\r\n    return (\r\n        <h3>Saldo budżetu domowego: <span style={ { color: !balance ? 'red' : 'green' } }> {balance} </span> </h3>\r\n        // <h3>Saldo budżetu domowego: <span style={ !balance ? {color:'red'} : {color:'green'} }> {balance} </span> </h3> // trochę inaczej\r\n        );\r\n}\r\n\r\nexport default Score;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport FormAddExpense from './components/FormAddExpense';\r\nimport Costs from './components/Costs';\r\nimport Income from './components/Income';\r\nimport Score from './components/Score';\r\n\r\nclass App extends Component {\r\n  state = {\r\n      totalCost:-100,\r\n      totalIncome:750,\r\n      costs: [\r\n        { id:0,\r\n          name:'majtki',\r\n          income:false,\r\n          cost:true,\r\n          category:'ubrania',\r\n          amount:'80',\r\n          type:'costs',\r\n        },\r\n        { id:1,\r\n        name:'pomidory',\r\n        income:false,\r\n        cost:true,\r\n        category:'spozywcze',\r\n        amount:'33',\r\n        type:'costs',\r\n      },\r\n      { id:2,\r\n        name:'torba',\r\n        income:false,\r\n        cost:true,\r\n        category:'ubrania',\r\n        amount:'29',\r\n        type:'costs',\r\n      },],\r\n      incomes: [\r\n        { id:0,\r\n          name:'500+',\r\n          income:false,\r\n          cost:true,\r\n          category:'swiadczenia',\r\n          amount:'500',\r\n          type:'incomes',\r\n        },\r\n        { id:1,\r\n        name:'pensja',\r\n        income:false,\r\n        cost:true,\r\n        category:'etat',\r\n        amount:'3333',\r\n        type:'incomes',\r\n      }]\r\n   }\r\n    changeCosts = (newArray)=>{\r\n      this.setState({costs:newArray})\r\n    }\r\n    deleteItem = (itemId, type) => { //TODO - rozwiązanie wymaga ujednolicenia/UNIFICATION\r\n      if(type===\"costs\"){\r\n        let costs = [...this.state.costs].filter((cost) => {return cost.id!==itemId});\r\n        this.setState({costs});\r\n      }\r\n      if(type===\"incomes\"){\r\n        let incomes = [...this.state.incomes].filter((income) => {return income.id!==itemId});\r\n        this.setState({incomes});\r\n      }\r\n    }\r\n    changeIncomes = (newArray)=>{\r\n      this.setState({incomes:newArray})\r\n    }\r\n//DODAWANIE - czy nie lepiej stworzyć komponent CALCULATE i tam trzymać wydatki - uporządkować strukturę ?\r\n    //za-ini-cjalizować wywolanie tej funkcji - cykl zycia komponentow przed renderem ?\r\n    additionCosts = () =>{\r\n      console.log('dodaje wszystkie wydatki');\r\n      \r\n    }\r\n  render() {\r\n    const {costs, incomes, totalCost, totalIncome} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <header className=\"mt-2\"><h5>04-04 - Kalkulator wydatków</h5></header> */}\r\n        <div className=\"row\">\r\n              <div className=\"col-6 offset-3\">\r\n                  <Score totalCost={totalCost} totalIncome={totalIncome}/>\r\n              </div>\r\n          </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 border py-2 bg-light\">\r\n              <FormAddExpense costs={costs} incomes={incomes} changeCosts={this.changeCosts} changeIncomes={this.changeIncomes}/>\r\n            </div>\r\n            <div className=\"col-md-4 border py-2 bg-light\">\r\n              <Costs costs={costs} totalCost={totalCost} deleteItem={this.deleteItem}/>\r\n            </div>\r\n            <div className=\"col-md-4 border py-2 bg-light\">\r\n              <Income incomes={incomes} totalIncome={totalIncome} deleteItem={this.deleteItem}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}